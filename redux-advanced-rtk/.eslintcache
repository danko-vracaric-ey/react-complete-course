[{"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\index.js":"1","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\App.js":"2","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\index.js":"3","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\Cart.js":"5","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Shop\\Products.js":"6","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\ui-slice.js":"7","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Layout\\MainHeader.js":"8","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\CartItem.js":"9","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Shop\\ProductItem.js":"10","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\UI\\Card.js":"11","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\CartButton.js":"12","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\cart-slice.js":"13","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\UI\\Notification.js":"14","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\cart-actions.js":"15"},{"size":295,"mtime":1659990738864,"results":"16","hashOfConfig":"17"},{"size":5138,"mtime":1660133104504,"results":"18","hashOfConfig":"17"},{"size":296,"mtime":1659994467117,"results":"19","hashOfConfig":"17"},{"size":233,"mtime":1648643244000,"results":"20","hashOfConfig":"17"},{"size":759,"mtime":1660036746285,"results":"21","hashOfConfig":"17"},{"size":922,"mtime":1659993323714,"results":"22","hashOfConfig":"17"},{"size":791,"mtime":1660057358001,"results":"23","hashOfConfig":"17"},{"size":361,"mtime":1648643244000,"results":"24","hashOfConfig":"17"},{"size":1094,"mtime":1660133269218,"results":"25","hashOfConfig":"17"},{"size":842,"mtime":1659994535103,"results":"26","hashOfConfig":"17"},{"size":244,"mtime":1648643244000,"results":"27","hashOfConfig":"17"},{"size":701,"mtime":1659994616115,"results":"28","hashOfConfig":"17"},{"size":3291,"mtime":1660134355066,"results":"29","hashOfConfig":"17"},{"size":516,"mtime":1660048501926,"results":"30","hashOfConfig":"17"},{"size":3076,"mtime":1660133966542,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"wcsqjm",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\index.js",[],["66","67"],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\App.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\index.js",["68"],"import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport cartSlice from \"./cart-slice\";\r\n\r\nconst DUMMY_PRODUCTS = {};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    ui: uiSlice.reducer,\r\n    cart: cartSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Shop\\Products.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\ui-slice.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Layout\\MainHeader.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Shop\\ProductItem.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\UI\\Card.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\Cart\\CartButton.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\cart-slice.js",["69"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\"; // we are importing this for thunk\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n\r\n      state.items = action.payload.items;\r\n    },\r\n\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n      state.totalQuantity++;\r\n\r\n      state.changed = true;\r\n\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity = existingItem.quantity + 1;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// export const sendCartData = (cartData) => {\r\n//   return async (dispatch) => {\r\n//     // we return async func, we don't know who will execute the function, but inside we dispatch a notification action, create a new function in there we send request and then call it inside try catch\r\n//     dispatch(\r\n//       uiActions.showNotification({\r\n//         status: \"pending\",\r\n//         title: \"Sending...\",\r\n//         message: \"Sending cart data\",\r\n//       })\r\n//     );\r\n\r\n//     const sendRequest = async () => {\r\n//       const res = await fetch(\r\n//         \"https://redux-advanced-87676-default-rtdb.firebaseio.com/items.json\",\r\n//         {\r\n//           method: \"PUT\", // we also store data but new data won't be added on a list but overwrite data\r\n//           body: JSON.stringify(cartData),\r\n//         }\r\n//       );\r\n//       if (!res.ok) {\r\n//         // throw new Error(\"Sending cart data failed\"); instead I will dispatch an action\r\n//         throw new Error(\"Sending data faild\");\r\n//       } // FOR HANDLING POTENTIAL ERROS NEW FUNCTION\r\n\r\n//       const resData = await res.json();\r\n//     };\r\n\r\n//     try {\r\n//       await sendRequest();\r\n//       dispatch(\r\n//         uiActions.showNotification({\r\n//           status: \"success\", // used for css classes\r\n//           title: \"Sucess\", //\r\n//           message: \"Sending cart data successfully\",\r\n//         })\r\n//       );\r\n//     } catch (error) {\r\n//       dispatch(\r\n//         uiActions.showNotification({\r\n//           status: \"error\",\r\n//           title: \"Error!\",\r\n//           message: \"Sending cart data failed\",\r\n//         })\r\n//       );\r\n//     }\r\n//   };\r\n// };\r\n\r\n// WE CALL THIS INSIDE USE EFFECT IN APP\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\components\\UI\\Notification.js",[],"C:\\Users\\HV485VX\\JulyN\\react-complete-course\\redux-advanced-rtk\\src\\store\\cart-actions.js",["70"],"import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\n// ----------------------------------------------------------------------------------------------------------------------\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-advanced-87676-default-rtdb.firebaseio.com/items.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch cart data!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Fetching cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport const sendCartData = (cartData) => {\r\n  return async (dispatch) => {\r\n    // we return async func, we don't know who will execute the function, but inside we dispatch a notification action, create a new function in there we send request and then call it inside try catch\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const res = await fetch(\r\n        \"https://redux-advanced-87676-default-rtdb.firebaseio.com/items.json\",\r\n        {\r\n          method: \"PUT\", // we also store data but new data won't be added on a list but overwrite data\r\n          body: JSON.stringify({\r\n            items: cartData.items,\r\n            totalQuantity: cartData.totalQuantity,\r\n          }), // instead whole cartData, so we don't have changed flag written in the base every time, we can not stringify the whole object\r\n        }\r\n      );\r\n      if (!res.ok) {\r\n        // throw new Error(\"Sending cart data failed\"); instead I will dispatch an action\r\n        throw new Error(\"Sending data faild\");\r\n      } // FOR HANDLING POTENTIAL ERROS NEW FUNCTION\r\n\r\n      const resData = await res.json();\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\", // used for css classes\r\n          title: \"Sucess\", //\r\n          message: \"Sending cart data successfully\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n// -----------------------------------------------------------------------------------------------------------------------------------------------+\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":5,"column":7,"nodeType":"77","messageId":"78","endLine":5,"endColumn":21},{"ruleId":"75","severity":1,"message":"79","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":70,"column":13,"nodeType":"77","messageId":"78","endLine":70,"endColumn":20},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'DUMMY_PRODUCTS' is assigned a value but never used.","Identifier","unusedVar","'uiActions' is defined but never used.","'resData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]